plugins {
    // Spring boot & dependency management:
    // https://docs.spring.io/spring-boot/docs/current/gradle-plugin/reference/htmlsingle/
    id 'org.springframework.boot' version '2.6.0'
    id "io.spring.dependency-management" version "1.0.11.RELEASE" 
    // Lombok generates getters and setters and more. https://projectlombok.org/setup/gradle
    // 5.3.3.3 is newest version compatible with Gradle 6 it seems.
    id "io.freefair.lombok" version "5.3.3.3"
    id 'java'
    id 'java-library'
    // testing, documentation, ...
    id 'jacoco'  // Test coverage report (base for e.g. codecov)
    id "org.owasp.dependencycheck" version "6.5.0.1"  // find known vulnerabilities (CVEs) in dependencies
    id 'org.asciidoctor.jvm.convert' version '3.3.2'  // Documentation
}

archivesBaseName = 'template'
description = "A template project."
version = "0.0.1"
group = 'edu.kit.datamanager'

println "Running gradle version: $gradle.gradleVersion"
println "JDK version: ${JavaVersion.current()}"
println "Building ${name} version: ${version}"

repositories {
    mavenLocal() 
    mavenCentral()
}

sourceCompatibility = 1.8
targetCompatibility = 1.8
 
configurations {
    all*.exclude module : 'spring-boot-starter-logging'
    // See testing & documentation at the end of this file
    asciidoctorExt
}

lombok {
    // check here for new versions: https://projectlombok.org/download
    version = '1.18.22'
}

if (System.getProperty("profile") == "minimal") {
    // Use "./gradlew -Dprofile=minimal build" if you want to finish the build task faster.
    // Might skip extensive tests or documentation creation.
    println "Using minimal profile for building " + project.getName()
    apply from: 'gradle/profile-minimal.gradle'
} else {
    println "Using default profile (full/release build) for " + project.getName()
    apply from: 'gradle/profile-default.gradle'
}

dependencies {
    // Spring framework dependencies can be listed without versions,
    // as the spring boot gradle plugin will choose the version.
    // To update all spring dependencies, simply update the plugins instead.

    // Base dependency, bundling reusable components for our services.
    implementation("edu.kit.datamanager:service-base:0.3.0")
    // Base dependency for repositories, ontaining reusable components.
    implementation("edu.kit.datamanager:repo-core:0.9.1")
    // Messaging support (AMQP, e.g. RabbitMQ)
    //implementation("edu.kit.datamanager:generic-message-consumer:0.2")

    // Building REST for repositories
    implementation("org.springframework.boot:spring-boot-starter-data-rest")
    // Jakarta XML Binding / Java Architecture for XML Binding
    implementation 'javax.xml.bind:jaxb-api:2.3.1'
    implementation 'com.sun.xml.bind:jaxb-core:3.0.2'
    implementation 'com.sun.xml.bind:jaxb-impl:3.0.2'
    // Encapsulation of data
    implementation('javax.activation:activation:1.1.1')
    // byte code manipulation
    implementation('org.javassist:javassist:3.28.0-GA')
    
    // Mockup libraries for testing
    testImplementation("org.mockito:mockito-core:4.0.0")
    testImplementation("org.powermock:powermock-module-junit4:2.0.9")
    testImplementation("org.powermock:powermock-api-mockito2:2.0.9")

    // Asciidoctor + spring-restdocs
    testImplementation('org.springframework.restdocs:spring-restdocs-mockmvc')
    asciidoctorExt('org.springframework.restdocs:spring-restdocs-asciidoctor')
    asciidoctorExt('com.github.allati.asciidoctor.monotree:asciidoctor-extension-monotree:0.0.1')
}

// Makes executable jar file.
// The bootJar task is available through the Spring Boot Gradle Plugin.
bootJar {
    manifest {
        // "Looks in various places for a properties file to extract loader settings,
        // defaulting to loader.properties either on the current classpath or in the
        // current working directory."
        // Docs:
        // https://docs.spring.io/spring-boot/docs/current/gradle-plugin/reference/htmlsingle/#packaging-executable.configuring.main-class
        // https://docs.spring.io/spring-boot/docs/current/api/org/springframework/boot/loader/PropertiesLauncher.html
        attributes 'Main-Class': 'org.springframework.boot.loader.PropertiesLauncher'
    }
    // Include documentation to be available on runtime.
    dependsOn asciidoctor
    from ("${asciidoctor.outputDir}/html5") {
        into 'static/docs'
    }
    // Make pit executable without `java -jar`
    // by adding a launch script into the jar file.
    // Works only on unix platforms.
    // https://docs.spring.io/spring-boot/docs/current/gradle-plugin/reference/htmlsingle/#packaging-executable.configuring.launch-script
    launchScript()
}
